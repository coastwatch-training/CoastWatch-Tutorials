knitr::opts_chunk$set(
echo = TRUE,
fig.path = "images/",
warning = FALSE, message = FALSE
)
packages <- c( "ncdf4","plyr","lubridate","rerddap","ggplot2","plotdap",
"rerddapXtracto","maps", "mapdata","grid")
# Install packages not yet installed
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
# Load packages
invisible(lapply(packages, library, character.only = TRUE))
xcoord <- c(-95,-90)
ycoord <- c(25,30)
ERDDAP_Node <- "https://coastwatch.pfeg.noaa.gov/erddap/"
# Extract the timeseries data using rxtracto_3D
chlSeaWiFS<-rxtracto_3D(dataInfo,
parameter=parameter,
tcoord=tcoord,
xcoord=xcoord,
ycoord=ycoord,
zcoord=zcoord)
knitr::opts_chunk$set(
echo = TRUE,
fig.path = "images/",
warning = FALSE, message = FALSE
)
knitr::opts_chunk$set(
echo = TRUE,
fig.path = "images/",
warning = FALSE, message = FALSE
)
packages <- c( "ncdf4","plyr","lubridate","rerddap","ggplot2","plotdap",
"rerddapXtracto","maps", "mapdata","grid")
# Install packages not yet installed
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
# Load packages
invisible(lapply(packages, library, character.only = TRUE))
xcoord <- c(-95,-90)
ycoord <- c(25,30)
ERDDAP_Node <- "https://coastwatch.pfeg.noaa.gov/erddap/"
dataInfo <- rerddap::info('erdSW2018chlamday', url=ERDDAP_Node)
var <- dataInfo$variable$variable_name
# Display the dataset metadata
dataInfo
# Extract the parameter name from the metadata in dataInfo
parameter <- dataInfo$variable$variable_name
# Set the altitude coordinate to zero
zcoord <- 0.
# Extract the beginning and ending dates of the dataset from the metadata in dataInfo
global <- dataInfo$alldata$NC_GLOBAL
tt <- global[ global$attribute_name %in% c('time_coverage_end','time_coverage_start'), "value", ]
# Populate the time vector with the time_coverage_start from dataInfo
# Use the "last" option for the ending date
tcoord <- c(tt[2],"last")
# Extract the timeseries data using rxtracto_3D
chlSeaWiFS<-rxtracto_3D(dataInfo,
parameter=parameter,
tcoord=tcoord,
xcoord=xcoord,
ycoord=ycoord,
zcoord=zcoord)
# Remove extraneous zcoord dimension for chlorophyll
chlSeaWiFS$chlorophyll <- drop(chlSeaWiFS$chlorophyll)
#Run rxtracto_3D
chlMODIS<-rxtracto_3D(dataInfo,
parameter=parameter,
tcoord=tcoord,
xcoord=xcoord,
ycoord=ycoord)
## Spatially average all the data within the box for each dataset.
## The c(3) indicates the dimension to keep - in this case time
chlSeaWiFS$avg <- apply(chlSeaWiFS$chlorophyll, c(3),function(x) mean(x,na.rm=TRUE))
# Extract the timeseries data using rxtracto_3D
chlSeaWiFS<-rxtracto_3D(dataInfo,
parameter=parameter,
tcoord=tcoord,
xcoord=xcoord,
ycoord=ycoord,
zcoord=zcoord)
# Remove extraneous zcoord dimension for chlorophyll
chlSeaWiFS$chlorophyll <- drop(chlSeaWiFS$chlorophyll)
knitr::opts_chunk$set(
echo = TRUE,
fig.path = "images/",
warning = FALSE, message = FALSE
)
packages <- c( "ncdf4","plyr","lubridate","rerddap","ggplot2","plotdap",
"rerddapXtracto","maps", "mapdata","grid")
# Install packages not yet installed
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
# Load packages
invisible(lapply(packages, library, character.only = TRUE))
xcoord <- c(-95,-90)
ycoord <- c(25,30)
ERDDAP_Node <- "https://coastwatch.pfeg.noaa.gov/erddap/"
dataInfo <- rerddap::info('erdSW2018chlamday', url=ERDDAP_Node)
var <- dataInfo$variable$variable_name
# Display the dataset metadata
dataInfo
# Extract the parameter name from the metadata in dataInfo
parameter <- dataInfo$variable$variable_name
# Set the altitude coordinate to zero
zcoord <- 0.
# Extract the beginning and ending dates of the dataset from the metadata in dataInfo
global <- dataInfo$alldata$NC_GLOBAL
tt <- global[ global$attribute_name %in% c('time_coverage_end','time_coverage_start'), "value", ]
# Populate the time vector with the time_coverage_start from dataInfo
# Use the "last" option for the ending date
tcoord <- c(tt[2],"last")
# Extract the timeseries data using rxtracto_3D
chlSeaWiFS<-rxtracto_3D(dataInfo,
parameter=parameter,
tcoord=tcoord,
xcoord=xcoord,
ycoord=ycoord)
myFunc <- function(x) log(x)
plotBBox(chlSeaWiFS, plotColor = 'algae', myFunc = myFunc)
dataInfo <- rerddap::info('erdMH1chlamday_R2022SQ', url=ERDDAP_Node)
# Extract the parameter name from the metadata in dataInfo
parameter <- dataInfo$variable$variable_name
#Extract the start and end times of the dataset from the metadata in dataInfo
global <- dataInfo$alldata$NC_GLOBAL
# Populate the time vector with the time_coverage_start from dataInfo
# Use the "last" option for the ending date
tt <- global[ global$attribute_name %in% c('time_coverage_end','time_coverage_start'), "value", ]
tcoord <- c(tt[2],"last")
#Run rxtracto_3D
chlMODIS<-rxtracto_3D(dataInfo,
parameter=parameter,
tcoord=tcoord,
xcoord=xcoord,
ycoord=ycoord)
dataInfo <- rerddap::info('nesdisVHNSQchlaMonthly', url=ERDDAP_Node)
# Extract the parameter name from the metadata in dataInfo
parameter <- dataInfo$variable$variable_name
#Extract the start and end times of the dataset from the metadata in dataInfo
global <- dataInfo$alldata$NC_GLOBAL
# This dataset has an altitude dimensionm, so must include zcoord as an argument in the rxtracto_3D function Set the altitude coordinate to zero
zcoord <- 0.
# Populate the time vector with the time_coverage_start from dataInfo
# Use the "last" option for the ending date
tt <- global[ global$attribute_name %in% c('time_coverage_end','time_coverage_start'), "value", ]
tcoord <- c(tt[2],"last")
#Run rxtracto_3D
chlVIIRS <- rxtracto_3D(dataInfo,
parameter=parameter,
tcoord=tcoord,
xcoord=xcoord,
ycoord=ycoord,
zcoord=zcoord)
# Remove extraneous zcoord dimension for chlorophyll
chlVIIRS$chlor_a <- drop(chlVIIRS$chlor_a)
packages <- c( "ncdf4","plyr","lubridate","rerddap","ggplot2","plotdap",
"rerddapXtracto","maps", "mapdata","grid")
# Install packages not yet installed
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
# Load packages
invisible(lapply(packages, library, character.only = TRUE))
packages <- c( "ncdf4","plyr","lubridate","rerddap","ggplot2","plotdap",
"rerddapXtracto","maps", "mapdata","grid", "tidyverse")
# Install packages not yet installed
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
# Load packages
invisible(lapply(packages, library, character.only = TRUE))
unlink("Tutorial2-timeseries_compare_sensors_cache", recursive = TRUE)
